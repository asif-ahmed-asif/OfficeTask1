@model EmployeeMVC.Models.Employee

@{
    ViewData["Title"] = "Create";
}

<div class="row">
    <div class="mx-auto col-10 col-md-8 col-lg-6">
        <h2>Add New Employee</h2><hr />
        @using (Html.BeginForm("Create", "Employee", FormMethod.Post))
        {
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Mobile, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Email, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.DepartmentId, new SelectList(ViewBag.Departments, "Value", "Text"),
            "--Select--", new { @class = "form-control", id = "Department" })
            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.DesignationId, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.DesignationId, Enumerable.Empty<SelectListItem>(), 
            "--Select--", new { @class = "form-control", id = "Designation" })
                @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary w-100" />
        </div>
        }
        <div class="mt-3">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
</div>

@section Scripts {
<script>
    $(document).ready(function () {
    var dId = document.getElementById('Department').value;
    if(dId != ""){
        AjaxCall(dId);
    }

        $("#Department").change(function () {
            var departmentId = $(this).val();
            if(departmentId == ""){
                var designationDropdown = $("#Designation");
                designationDropdown.empty();
                designationDropdown.append($('<option></option>').val('').text('--Select--'));
            }
            AjaxCall(departmentId);
        });

        function AjaxCall(departmentId){
            $.ajax({
                url: '@Url.Action("GetDesignations", "Employee")',
                type: 'GET',
                data: { id: departmentId },
                dataType: 'json',
                success: function (data) {
                    console.log(data);
                    var designationDropdown = $("#Designation");
                    designationDropdown.empty();
                    designationDropdown.append($('<option></option>').val('').text('--Select--'));
                    $.each(data, function (index, item) {
                        designationDropdown.append($('<option></option>').val(item.Value).text(item.Text));
                    });
                },
                error: function () {

                }
            });
        }
    });
</script>
}